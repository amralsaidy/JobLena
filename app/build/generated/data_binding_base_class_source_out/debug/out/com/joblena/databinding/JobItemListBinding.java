// Generated by data binding compiler. Do not edit!
package com.joblena.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.joblena.R;
import com.joblena.domain.entities.JobDetail;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class JobItemListBinding extends ViewDataBinding {
  @NonNull
  public final TextView experience;

  @NonNull
  public final TextView jobName;

  @NonNull
  public final LinearLayout layoutSkills;

  @NonNull
  public final TextView location;

  @NonNull
  public final TextView offerJob;

  @NonNull
  public final TextView percent;

  @NonNull
  public final ImageView save;

  @Bindable
  protected JobDetail mJobdetail;

  protected JobItemListBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView experience, TextView jobName, LinearLayout layoutSkills, TextView location,
      TextView offerJob, TextView percent, ImageView save) {
    super(_bindingComponent, _root, _localFieldCount);
    this.experience = experience;
    this.jobName = jobName;
    this.layoutSkills = layoutSkills;
    this.location = location;
    this.offerJob = offerJob;
    this.percent = percent;
    this.save = save;
  }

  public abstract void setJobdetail(@Nullable JobDetail jobdetail);

  @Nullable
  public JobDetail getJobdetail() {
    return mJobdetail;
  }

  @NonNull
  public static JobItemListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.job_item_list, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static JobItemListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<JobItemListBinding>inflateInternal(inflater, R.layout.job_item_list, root, attachToRoot, component);
  }

  @NonNull
  public static JobItemListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.job_item_list, null, false, component)
   */
  @NonNull
  @Deprecated
  public static JobItemListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<JobItemListBinding>inflateInternal(inflater, R.layout.job_item_list, null, false, component);
  }

  public static JobItemListBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static JobItemListBinding bind(@NonNull View view, @Nullable Object component) {
    return (JobItemListBinding)bind(component, view, R.layout.job_item_list);
  }
}
