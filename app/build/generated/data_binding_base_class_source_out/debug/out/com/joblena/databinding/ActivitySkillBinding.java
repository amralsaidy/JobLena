// Generated by data binding compiler. Do not edit!
package com.joblena.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.joblena.R;
import com.joblena.app.common.NoSwipeViewPager;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivitySkillBinding extends ViewDataBinding {
  @NonNull
  public final TextView languageBtn;

  @NonNull
  public final LinearLayout layoutButtons;

  @NonNull
  public final Button nextBtn;

  @NonNull
  public final TextView preferencesBtn;

  @NonNull
  public final Button previousBtn;

  @NonNull
  public final Button processBtn;

  @NonNull
  public final Button publishBtn;

  @NonNull
  public final TextView softskillsBtn;

  @NonNull
  public final TextView techincalBtn;

  @NonNull
  public final NoSwipeViewPager viewpager;

  protected ActivitySkillBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView languageBtn, LinearLayout layoutButtons, Button nextBtn, TextView preferencesBtn,
      Button previousBtn, Button processBtn, Button publishBtn, TextView softskillsBtn,
      TextView techincalBtn, NoSwipeViewPager viewpager) {
    super(_bindingComponent, _root, _localFieldCount);
    this.languageBtn = languageBtn;
    this.layoutButtons = layoutButtons;
    this.nextBtn = nextBtn;
    this.preferencesBtn = preferencesBtn;
    this.previousBtn = previousBtn;
    this.processBtn = processBtn;
    this.publishBtn = publishBtn;
    this.softskillsBtn = softskillsBtn;
    this.techincalBtn = techincalBtn;
    this.viewpager = viewpager;
  }

  @NonNull
  public static ActivitySkillBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_skill, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivitySkillBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivitySkillBinding>inflateInternal(inflater, R.layout.activity_skill, root, attachToRoot, component);
  }

  @NonNull
  public static ActivitySkillBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_skill, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivitySkillBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivitySkillBinding>inflateInternal(inflater, R.layout.activity_skill, null, false, component);
  }

  public static ActivitySkillBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivitySkillBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivitySkillBinding)bind(component, view, R.layout.activity_skill);
  }
}
